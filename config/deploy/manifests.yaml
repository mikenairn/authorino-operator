apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: authconfigs.authorino.kuadrant.io
spec:
  group: authorino.kuadrant.io
  names:
    kind: AuthConfig
    listKind: AuthConfigList
    plural: authconfigs
    singular: authconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Ready?
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Number of trusted identity sources
      jsonPath: .status.numIdentitySources
      name: Id sources
      priority: 2
      type: integer
    - description: Number of external metadata sources
      jsonPath: .status.numMetadataSources
      name: Metadata sources
      priority: 2
      type: integer
    - description: Number of authorization policies
      jsonPath: .status.numAuthorizationPolicies
      name: Authz policies
      priority: 2
      type: integer
    - description: Number of items added to the client response
      jsonPath: .status.numResponseItems
      name: Response items
      priority: 2
      type: integer
    - description: Whether issuing Festival Wristbands
      jsonPath: .status.festivalWristbandEnabled
      name: Wristband
      priority: 2
      type: boolean
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AuthConfig is the schema for Authorino's AuthConfig API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specifies the desired state of the AuthConfig resource, i.e.
              the authencation/authorization scheme to be applied to protect the matching
              service hosts.
            properties:
              authorization:
                description: Authorization is the list of authorization policies.
                  All policies in this list MUST evaluate to "true" for a request
                  be successful in the authorization phase.
                items:
                  description: 'Authorization policy to be enforced. Apart from "name",
                    one of the following parameters is required and only one of the
                    following parameters is allowed: "opa", "json" or "kubernetes".'
                  oneOf:
                  - properties:
                      name: {}
                      opa: {}
                    required:
                    - name
                    - opa
                  - properties:
                      json: {}
                      name: {}
                    required:
                    - name
                    - json
                  - properties:
                      kubernetes: {}
                      name: {}
                    required:
                    - name
                    - kubernetes
                  properties:
                    json:
                      description: JSON pattern matching authorization policy.
                      properties:
                        conditions:
                          description: Conditions that must match for Authorino to
                            enforce this policy; otherwise, the policy will be skipped.
                          items:
                            properties:
                              operator:
                                description: 'The binary operator to be applied to
                                  the content fetched from the authorization JSON,
                                  for comparison with "value". Possible values are:
                                  "eq" (equal to), "neq" (not equal to), "incl" (includes;
                                  for arrays), "excl" (excludes; for arrays), "matches"
                                  (regex)'
                                enum:
                                - eq
                                - neq
                                - incl
                                - excl
                                - matches
                                type: string
                              selector:
                                description: Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson.
                                  The value is used to fetch content from the input
                                  authorization JSON built by Authorino along the
                                  identity and metadata phases.
                                type: string
                              value:
                                description: The value of reference for the comparison
                                  with the content fetched from the authorization
                                  policy. If used with the "matches" operator, the
                                  value must compile to a valid Golang regex.
                                type: string
                            required:
                            - operator
                            - selector
                            - value
                            type: object
                          type: array
                        rules:
                          description: The rules that must all evaluate to "true"
                            for the request to be authorized.
                          items:
                            properties:
                              operator:
                                description: 'The binary operator to be applied to
                                  the content fetched from the authorization JSON,
                                  for comparison with "value". Possible values are:
                                  "eq" (equal to), "neq" (not equal to), "incl" (includes;
                                  for arrays), "excl" (excludes; for arrays), "matches"
                                  (regex)'
                                enum:
                                - eq
                                - neq
                                - incl
                                - excl
                                - matches
                                type: string
                              selector:
                                description: Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson.
                                  The value is used to fetch content from the input
                                  authorization JSON built by Authorino along the
                                  identity and metadata phases.
                                type: string
                              value:
                                description: The value of reference for the comparison
                                  with the content fetched from the authorization
                                  policy. If used with the "matches" operator, the
                                  value must compile to a valid Golang regex.
                                type: string
                            required:
                            - operator
                            - selector
                            - value
                            type: object
                          type: array
                      type: object
                    kubernetes:
                      description: Kubernetes authorization policy based on `SubjectAccessReview`
                        Path and Verb are inferred from the request.
                      properties:
                        conditions:
                          description: Conditions that must match for Authorino to
                            enforce this policy; otherwise, the policy will be skipped.
                          items:
                            properties:
                              operator:
                                description: 'The binary operator to be applied to
                                  the content fetched from the authorization JSON,
                                  for comparison with "value". Possible values are:
                                  "eq" (equal to), "neq" (not equal to), "incl" (includes;
                                  for arrays), "excl" (excludes; for arrays), "matches"
                                  (regex)'
                                enum:
                                - eq
                                - neq
                                - incl
                                - excl
                                - matches
                                type: string
                              selector:
                                description: Any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson.
                                  The value is used to fetch content from the input
                                  authorization JSON built by Authorino along the
                                  identity and metadata phases.
                                type: string
                              value:
                                description: The value of reference for the comparison
                                  with the content fetched from the authorization
                                  policy. If used with the "matches" operator, the
                                  value must compile to a valid Golang regex.
                                type: string
                            required:
                            - operator
                            - selector
                            - value
                            type: object
                          type: array
                        groups:
                          description: Groups to test for.
                          items:
                            type: string
                          type: array
                        resourceAttributes:
                          description: Use ResourceAttributes for checking permissions
                            on Kubernetes resources If omitted, it performs a non-resource
                            `SubjectAccessReview`, with verb and path inferred from
                            the request.
                          properties:
                            group:
                              properties:
                                value:
                                  type: string
                                valueFrom:
                                  properties:
                                    authJSON:
                                      description: 'Selector to fill the value from
                                        the authorization JSON. Any patterns supported
                                        by https://pkg.go.dev/github.com/tidwall/gjson
                                        can be used. The value can be just the pattern
                                        with the path to fetch from the authorization
                                        JSON (e.g. ''context.request.http.host'')
                                        or a string template with variable placeholders
                                        that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                        The following string modifiers are available:
                                        @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                        @case:upper|lower, and @base64:encode|decode.'
                                      type: string
                                  type: object
                              type: object
                            name:
                              properties:
                                value:
                                  type: string
                                valueFrom:
                                  properties:
                                    authJSON:
                                      description: 'Selector to fill the value from
                                        the authorization JSON. Any patterns supported
                                        by https://pkg.go.dev/github.com/tidwall/gjson
                                        can be used. The value can be just the pattern
                                        with the path to fetch from the authorization
                                        JSON (e.g. ''context.request.http.host'')
                                        or a string template with variable placeholders
                                        that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                        The following string modifiers are available:
                                        @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                        @case:upper|lower, and @base64:encode|decode.'
                                      type: string
                                  type: object
                              type: object
                            namespace:
                              properties:
                                value:
                                  type: string
                                valueFrom:
                                  properties:
                                    authJSON:
                                      description: 'Selector to fill the value from
                                        the authorization JSON. Any patterns supported
                                        by https://pkg.go.dev/github.com/tidwall/gjson
                                        can be used. The value can be just the pattern
                                        with the path to fetch from the authorization
                                        JSON (e.g. ''context.request.http.host'')
                                        or a string template with variable placeholders
                                        that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                        The following string modifiers are available:
                                        @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                        @case:upper|lower, and @base64:encode|decode.'
                                      type: string
                                  type: object
                              type: object
                            resource:
                              properties:
                                value:
                                  type: string
                                valueFrom:
                                  properties:
                                    authJSON:
                                      description: 'Selector to fill the value from
                                        the authorization JSON. Any patterns supported
                                        by https://pkg.go.dev/github.com/tidwall/gjson
                                        can be used. The value can be just the pattern
                                        with the path to fetch from the authorization
                                        JSON (e.g. ''context.request.http.host'')
                                        or a string template with variable placeholders
                                        that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                        The following string modifiers are available:
                                        @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                        @case:upper|lower, and @base64:encode|decode.'
                                      type: string
                                  type: object
                              type: object
                            subresource:
                              properties:
                                value:
                                  type: string
                                valueFrom:
                                  properties:
                                    authJSON:
                                      description: 'Selector to fill the value from
                                        the authorization JSON. Any patterns supported
                                        by https://pkg.go.dev/github.com/tidwall/gjson
                                        can be used. The value can be just the pattern
                                        with the path to fetch from the authorization
                                        JSON (e.g. ''context.request.http.host'')
                                        or a string template with variable placeholders
                                        that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                        The following string modifiers are available:
                                        @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                        @case:upper|lower, and @base64:encode|decode.'
                                      type: string
                                  type: object
                              type: object
                            verb:
                              properties:
                                value:
                                  type: string
                                valueFrom:
                                  properties:
                                    authJSON:
                                      description: 'Selector to fill the value from
                                        the authorization JSON. Any patterns supported
                                        by https://pkg.go.dev/github.com/tidwall/gjson
                                        can be used. The value can be just the pattern
                                        with the path to fetch from the authorization
                                        JSON (e.g. ''context.request.http.host'')
                                        or a string template with variable placeholders
                                        that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                        The following string modifiers are available:
                                        @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                        @case:upper|lower, and @base64:encode|decode.'
                                      type: string
                                  type: object
                              type: object
                          type: object
                        user:
                          description: User to test for. If without "Groups", then
                            is it interpreted as "What if User were not a member of
                            any groups"
                          properties:
                            value:
                              type: string
                            valueFrom:
                              properties:
                                authJSON:
                                  description: 'Selector to fill the value from the
                                    authorization JSON. Any patterns supported by
                                    https://pkg.go.dev/github.com/tidwall/gjson can
                                    be used. The value can be just the pattern with
                                    the path to fetch from the authorization JSON
                                    (e.g. ''context.request.http.host'') or a string
                                    template with variable placeholders that resolve
                                    to patterns (e.g. "Hello, {auth.identity.name}!")
                                    The following string modifiers are available:
                                    @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                    @case:upper|lower, and @base64:encode|decode.'
                                  type: string
                              type: object
                          type: object
                      required:
                      - user
                      type: object
                    name:
                      description: Name of the authorization policy. It can be used
                        to refer to the resolved authorization object in other configs.
                      type: string
                    opa:
                      description: Open Policy Agent (OPA) authorization policy.
                      properties:
                        externalRegistry:
                          description: External registry of OPA policies.
                          properties:
                            credentials:
                              description: Defines where client credentials will be
                                passed in the request to the service. If omitted,
                                it defaults to client credentials passed in the HTTP
                                Authorization header and the "Bearer" prefix expected
                                prepended to the secret value.
                              properties:
                                in:
                                  default: authorization_header
                                  description: The location in the request where client
                                    credentials shall be passed on requests authenticating
                                    with this identity source/authentication mode.
                                  enum:
                                  - authorization_header
                                  - custom_header
                                  - query
                                  - cookie
                                  type: string
                                keySelector:
                                  description: Used in conjunction with the `in` parameter.
                                    When used with `authorization_header`, the value
                                    is the prefix of the client credentials string,
                                    separated by a white-space, in the HTTP Authorization
                                    header (e.g. "Bearer", "Basic"). When used with
                                    `custom_header`, `query` or `cookie`, the value
                                    is the name of the HTTP header, query string parameter
                                    or cookie key, respectively.
                                  type: string
                              required:
                              - keySelector
                              type: object
                            endpoint:
                              description: Endpoint of the HTTP external registry.
                                The endpoint must respond with either plain/text or
                                application/json content-type. In the latter case,
                                the JSON returned in the body must include a path
                                `result.raw`, where the raw Rego policy will be extracted
                                from. This complies with the specification of the
                                OPA REST API (https://www.openpolicyagent.org/docs/latest/rest-api/#get-a-policy).
                              type: string
                            sharedSecretRef:
                              description: Reference to a Secret key whose value will
                                be passed by Authorino in the request. The HTTP service
                                can use the shared secret to authenticate the origin
                                of the request.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: The name of the secret in the Authorino's
                                    namespace to select from.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                          type: object
                        inlineRego:
                          description: Authorization policy as a Rego language document.
                            The Rego document must include the "allow" condition,
                            set by Authorino to "false" by default (i.e. requests
                            are unauthorized unless changed). The Rego document must
                            NOT include the "package" declaration in line 1.
                          type: string
                      type: object
                    priority:
                      default: 0
                      description: Priority group of the config. All configs in the
                        same priority group are evaluated concurrently; consecutive
                        priority groups are evaluated sequentially.
                      type: integer
                  required:
                  - name
                  type: object
                type: array
              denyWith:
                description: Custom denial response codes, statuses and headers to
                  override default 40x's.
                properties:
                  unauthenticated:
                    description: Denial status customization when the request is unauthenticated.
                    properties:
                      code:
                        description: HTTP status code to override the default denial
                          status code.
                        format: int64
                        maximum: 599
                        minimum: 300
                        type: integer
                      headers:
                        description: HTTP response headers to override the default
                          denial headers.
                        items:
                          properties:
                            name:
                              description: The name of the claim
                              type: string
                            value:
                              description: Static value of the claim
                              x-kubernetes-preserve-unknown-fields: true
                            valueFrom:
                              description: Dynamic value of the claim
                              properties:
                                authJSON:
                                  description: 'Selector to fill the value from the
                                    authorization JSON. Any patterns supported by
                                    https://pkg.go.dev/github.com/tidwall/gjson can
                                    be used. The value can be just the pattern with
                                    the path to fetch from the authorization JSON
                                    (e.g. ''context.request.http.host'') or a string
                                    template with variable placeholders that resolve
                                    to patterns (e.g. "Hello, {auth.identity.name}!")
                                    The following string modifiers are available:
                                    @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                    @case:upper|lower, and @base64:encode|decode.'
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      message:
                        description: HTTP message to override the default denial message.
                        type: string
                    type: object
                  unauthorized:
                    description: Denial status customization when the request is unauthorized.
                    properties:
                      code:
                        description: HTTP status code to override the default denial
                          status code.
                        format: int64
                        maximum: 599
                        minimum: 300
                        type: integer
                      headers:
                        description: HTTP response headers to override the default
                          denial headers.
                        items:
                          properties:
                            name:
                              description: The name of the claim
                              type: string
                            value:
                              description: Static value of the claim
                              x-kubernetes-preserve-unknown-fields: true
                            valueFrom:
                              description: Dynamic value of the claim
                              properties:
                                authJSON:
                                  description: 'Selector to fill the value from the
                                    authorization JSON. Any patterns supported by
                                    https://pkg.go.dev/github.com/tidwall/gjson can
                                    be used. The value can be just the pattern with
                                    the path to fetch from the authorization JSON
                                    (e.g. ''context.request.http.host'') or a string
                                    template with variable placeholders that resolve
                                    to patterns (e.g. "Hello, {auth.identity.name}!")
                                    The following string modifiers are available:
                                    @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                    @case:upper|lower, and @base64:encode|decode.'
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      message:
                        description: HTTP message to override the default denial message.
                        type: string
                    type: object
                type: object
              hosts:
                description: The list of public host names of the services protected
                  by this authentication/authorization scheme. Authorino uses the
                  requested host to lookup for the corresponding authentication/authorization
                  configs to enforce.
                items:
                  type: string
                type: array
              identity:
                description: List of identity sources/authentication modes. At least
                  one config of this list MUST evaluate to a valid identity for a
                  request to be successful in the identity verification phase.
                items:
                  description: 'The identity source/authentication mode config. Apart
                    from "name", one of the following parameters is required and only
                    one of the following parameters is allowed: "oicd", "apiKey" or
                    "kubernetes".'
                  oneOf:
                  - properties:
                      credentials: {}
                      name: {}
                      oauth2: {}
                    required:
                    - name
                    - oauth2
                  - properties:
                      credentials: {}
                      name: {}
                      oidc: {}
                    required:
                    - name
                    - oidc
                  - properties:
                      apiKey: {}
                      credentials: {}
                      name: {}
                    required:
                    - name
                    - apiKey
                  - properties:
                      credentials: {}
                      kubernetes: {}
                      name: {}
                    required:
                    - name
                    - kubernetes
                  properties:
                    apiKey:
                      properties:
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: The map of label selectors used by Authorino
                            to match secrets from the cluster storing valid credentials
                            to authenticate to this service
                          type: object
                      required:
                      - labelSelectors
                      type: object
                    credentials:
                      description: Defines where client credentials are required to
                        be passed in the request for this identity source/authentication
                        mode. If omitted, it defaults to client credentials passed
                        in the HTTP Authorization header and the "Bearer" prefix expected
                        prepended to the credentials value (token, API key, etc).
                      properties:
                        in:
                          default: authorization_header
                          description: The location in the request where client credentials
                            shall be passed on requests authenticating with this identity
                            source/authentication mode.
                          enum:
                          - authorization_header
                          - custom_header
                          - query
                          - cookie
                          type: string
                        keySelector:
                          description: Used in conjunction with the `in` parameter.
                            When used with `authorization_header`, the value is the
                            prefix of the client credentials string, separated by
                            a white-space, in the HTTP Authorization header (e.g.
                            "Bearer", "Basic"). When used with `custom_header`, `query`
                            or `cookie`, the value is the name of the HTTP header,
                            query string parameter or cookie key, respectively.
                          type: string
                      required:
                      - keySelector
                      type: object
                    extendedProperties:
                      description: Extends the resolved identity object with additional
                        custom properties before appending to the authorization JSON.
                        It requires the resolved identity object to always be of the
                        JSON type 'object'. Other JSON types (array, string, etc)
                        will break.
                      items:
                        properties:
                          name:
                            description: The name of the claim
                            type: string
                          value:
                            description: Static value of the claim
                            x-kubernetes-preserve-unknown-fields: true
                          valueFrom:
                            description: Dynamic value of the claim
                            properties:
                              authJSON:
                                description: 'Selector to fill the value from the
                                  authorization JSON. Any patterns supported by https://pkg.go.dev/github.com/tidwall/gjson
                                  can be used. The value can be just the pattern with
                                  the path to fetch from the authorization JSON (e.g.
                                  ''context.request.http.host'') or a string template
                                  with variable placeholders that resolve to patterns
                                  (e.g. "Hello, {auth.identity.name}!") The following
                                  string modifiers are available: @extract:{sep:"
                                  ",pos:0}, @replace{old:"",new:""}, @case:upper|lower,
                                  and @base64:encode|decode.'
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    kubernetes:
                      properties:
                        audiences:
                          description: The list of audiences (scopes) that must be
                            claimed in a Kubernetes authentication token supplied
                            in the request, and reviewed by Authorino. If omitted,
                            Authorino will review tokens expecting the host name of
                            the requested protected service amongst the audiences.
                          items:
                            type: string
                          type: array
                      type: object
                    name:
                      description: The name of this identity source/authentication
                        mode. It usually identifies a source of identities or group
                        of users/clients of the protected service. It can be used
                        to refer to the resolved identity object in other configs.
                      type: string
                    oauth2:
                      properties:
                        credentialsRef:
                          description: Reference to a Kubernetes secret in the same
                            namespace, that stores client credentials to the OAuth2
                            server.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        tokenIntrospectionUrl:
                          description: The full URL of the token introspection endpoint.
                          type: string
                        tokenTypeHint:
                          description: The token type hint for the token introspection.
                            If omitted, it defaults to "access_token".
                          type: string
                      required:
                      - credentialsRef
                      - tokenIntrospectionUrl
                      type: object
                    oidc:
                      properties:
                        endpoint:
                          description: Endpoint of the OIDC issuer. Authorino will
                            append to this value the well-known path to the OpenID
                            Connect discovery endpoint (i.e. "/.well-known/openid-configuration"),
                            used to automatically discover the OpenID Connect configuration,
                            whose set of claims is expected to include (among others)
                            the "jkws_uri" claim. The value must coincide with the
                            value of  the "iss" (issuer) claim of the discovered OpenID
                            Connect configuration.
                          type: string
                        ttl:
                          description: Decides how long to wait before refreshing
                            the OIDC configuration (in seconds).
                          type: integer
                      required:
                      - endpoint
                      type: object
                    priority:
                      default: 0
                      description: Priority group of the config. All configs in the
                        same priority group are evaluated concurrently; consecutive
                        priority groups are evaluated sequentially.
                      type: integer
                  required:
                  - name
                  type: object
                type: array
              metadata:
                description: List of metadata source configs. Authorino fetches JSON
                  content from sources on this list on every request.
                items:
                  description: 'The metadata config. Apart from "name", one of the
                    following parameters is required and only one of the following
                    parameters is allowed: "userInfo" or "uma".'
                  oneOf:
                  - properties:
                      name: {}
                      userInfo: {}
                    required:
                    - name
                    - userInfo
                  - properties:
                      name: {}
                      uma: {}
                    required:
                    - name
                    - uma
                  - properties:
                      name: {}
                      uma: {}
                    required:
                    - name
                    - http
                  properties:
                    http:
                      description: Generic HTTP interface to obtain authorization
                        metadata from a HTTP service.
                      properties:
                        bodyParameters:
                          description: Custom parameters to encode in the body of
                            the HTTP request. Use it with method=POST; for GET requests,
                            specify parameters using placeholders in the endpoint.
                          items:
                            properties:
                              name:
                                description: The name of the claim
                                type: string
                              value:
                                description: Static value of the claim
                                x-kubernetes-preserve-unknown-fields: true
                              valueFrom:
                                description: Dynamic value of the claim
                                properties:
                                  authJSON:
                                    description: 'Selector to fill the value from
                                      the authorization JSON. Any patterns supported
                                      by https://pkg.go.dev/github.com/tidwall/gjson
                                      can be used. The value can be just the pattern
                                      with the path to fetch from the authorization
                                      JSON (e.g. ''context.request.http.host'') or
                                      a string template with variable placeholders
                                      that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                      The following string modifiers are available:
                                      @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                      @case:upper|lower, and @base64:encode|decode.'
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        contentType:
                          default: application/x-www-form-urlencoded
                          description: Content-Type of the request body.
                          enum:
                          - application/x-www-form-urlencoded
                          - application/json
                          type: string
                        credentials:
                          description: Defines where client credentials will be passed
                            in the request to the service. If omitted, it defaults
                            to client credentials passed in the HTTP Authorization
                            header and the "Bearer" prefix expected prepended to the
                            secret value.
                          properties:
                            in:
                              default: authorization_header
                              description: The location in the request where client
                                credentials shall be passed on requests authenticating
                                with this identity source/authentication mode.
                              enum:
                              - authorization_header
                              - custom_header
                              - query
                              - cookie
                              type: string
                            keySelector:
                              description: Used in conjunction with the `in` parameter.
                                When used with `authorization_header`, the value is
                                the prefix of the client credentials string, separated
                                by a white-space, in the HTTP Authorization header
                                (e.g. "Bearer", "Basic"). When used with `custom_header`,
                                `query` or `cookie`, the value is the name of the
                                HTTP header, query string parameter or cookie key,
                                respectively.
                              type: string
                          required:
                          - keySelector
                          type: object
                        endpoint:
                          description: Endpoint of the HTTP service. The endpoint
                            accepts variable placeholders in the format "{selector}",
                            where "selector" is any pattern supported by https://pkg.go.dev/github.com/tidwall/gjson
                            and selects value from the authorization JSON. E.g. https://ext-auth-server.io/metadata?p={context.request.http.path}
                          type: string
                        headers:
                          description: Custom headers in the HTTP request.
                          items:
                            properties:
                              name:
                                description: The name of the claim
                                type: string
                              value:
                                description: Static value of the claim
                                x-kubernetes-preserve-unknown-fields: true
                              valueFrom:
                                description: Dynamic value of the claim
                                properties:
                                  authJSON:
                                    description: 'Selector to fill the value from
                                      the authorization JSON. Any patterns supported
                                      by https://pkg.go.dev/github.com/tidwall/gjson
                                      can be used. The value can be just the pattern
                                      with the path to fetch from the authorization
                                      JSON (e.g. ''context.request.http.host'') or
                                      a string template with variable placeholders
                                      that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                      The following string modifiers are available:
                                      @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                      @case:upper|lower, and @base64:encode|decode.'
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        method:
                          description: 'HTTP verb used in the request to the service.
                            Accepted values: GET (default), POST. When the request
                            method is POST, the authorization JSON is passed in the
                            body of the request.'
                          enum:
                          - GET
                          - POST
                          type: string
                        sharedSecretRef:
                          description: Reference to a Secret key whose value will
                            be passed by Authorino in the request. The HTTP service
                            can use the shared secret to authenticate the origin of
                            the request.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: The name of the secret in the Authorino's
                                namespace to select from.
                              type: string
                          required:
                          - key
                          - name
                          type: object
                      required:
                      - endpoint
                      type: object
                    name:
                      description: The name of the metadata source. It can be used
                        to refer to the resolved metadata object in other configs.
                      type: string
                    priority:
                      default: 0
                      description: Priority group of the config. All configs in the
                        same priority group are evaluated concurrently; consecutive
                        priority groups are evaluated sequentially.
                      type: integer
                    uma:
                      description: User-Managed Access (UMA) source of resource data.
                      properties:
                        credentialsRef:
                          description: Reference to a Kubernetes secret in the same
                            namespace, that stores client credentials to the resource
                            registration API of the UMA server.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        endpoint:
                          description: The endpoint of the UMA server. The value must
                            coincide with the "issuer" claim of the UMA config discovered
                            from the well-known uma configuration endpoint.
                          type: string
                      required:
                      - credentialsRef
                      - endpoint
                      type: object
                    userInfo:
                      description: OpendID Connect UserInfo linked to an OIDC identity
                        config of this same spec.
                      properties:
                        identitySource:
                          description: The name of an OIDC identity source included
                            in the "identity" section and whose OpenID Connect configuration
                            discovered includes the OIDC "userinfo_endpoint" claim.
                          type: string
                      required:
                      - identitySource
                      type: object
                  required:
                  - name
                  type: object
                type: array
              response:
                description: List of response configs. Authorino gathers data from
                  the auth pipeline to build custom responses for the client.
                items:
                  description: 'Dynamic response to return to the client. Apart from
                    "name", one of the following parameters is required and only one
                    of the following parameters is allowed: "wristband" or "json".'
                  properties:
                    json:
                      properties:
                        properties:
                          description: List of JSON property-value pairs to be added
                            to the dynamic response.
                          items:
                            properties:
                              name:
                                description: The name of the claim
                                type: string
                              value:
                                description: Static value of the claim
                                x-kubernetes-preserve-unknown-fields: true
                              valueFrom:
                                description: Dynamic value of the claim
                                properties:
                                  authJSON:
                                    description: 'Selector to fill the value from
                                      the authorization JSON. Any patterns supported
                                      by https://pkg.go.dev/github.com/tidwall/gjson
                                      can be used. The value can be just the pattern
                                      with the path to fetch from the authorization
                                      JSON (e.g. ''context.request.http.host'') or
                                      a string template with variable placeholders
                                      that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                      The following string modifiers are available:
                                      @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                      @case:upper|lower, and @base64:encode|decode.'
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                      required:
                      - properties
                      type: object
                    name:
                      description: Name of the custom response. It can be used to
                        refer to the resolved response object in other configs.
                      type: string
                    priority:
                      default: 0
                      description: Priority group of the config. All configs in the
                        same priority group are evaluated concurrently; consecutive
                        priority groups are evaluated sequentially.
                      type: integer
                    wrapper:
                      default: httpHeader
                      description: How Authorino wraps the response. Use "httpHeader"
                        (default) to wrap the response in an HTTP header; or "envoyDynamicMetadata"
                        to wrap the response as Envoy Dynamic Metadata
                      enum:
                      - httpHeader
                      - envoyDynamicMetadata
                      type: string
                    wrapperKey:
                      description: The name of key used in the wrapped response (name
                        of the HTTP header or property of the Envoy Dynamic Metadata
                        JSON). If omitted, it will be set to the name of the configuration.
                      type: string
                    wristband:
                      properties:
                        customClaims:
                          description: Any claims to be added to the wristband token
                            apart from the standard JWT claims (iss, iat, exp) added
                            by default.
                          items:
                            properties:
                              name:
                                description: The name of the claim
                                type: string
                              value:
                                description: Static value of the claim
                                x-kubernetes-preserve-unknown-fields: true
                              valueFrom:
                                description: Dynamic value of the claim
                                properties:
                                  authJSON:
                                    description: 'Selector to fill the value from
                                      the authorization JSON. Any patterns supported
                                      by https://pkg.go.dev/github.com/tidwall/gjson
                                      can be used. The value can be just the pattern
                                      with the path to fetch from the authorization
                                      JSON (e.g. ''context.request.http.host'') or
                                      a string template with variable placeholders
                                      that resolve to patterns (e.g. "Hello, {auth.identity.name}!")
                                      The following string modifiers are available:
                                      @extract:{sep:" ",pos:0}, @replace{old:"",new:""},
                                      @case:upper|lower, and @base64:encode|decode.'
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        issuer:
                          description: 'The endpoint to the Authorino service that
                            issues the wristband (format: <scheme>://<host>:<port>/<realm>,
                            where <realm> = <namespace>/<authorino-auth-config-resource-name/wristband-config-name)'
                          type: string
                        signingKeyRefs:
                          description: Reference by name to Kubernetes secrets and
                            corresponding signing algorithms. The secrets must contain
                            a `key.pem` entry whose value is the signing key formatted
                            as PEM.
                          items:
                            properties:
                              algorithm:
                                description: Algorithm to sign the wristband token
                                  using the signing key provided
                                enum:
                                - ES256
                                - ES384
                                - ES512
                                - RS256
                                - RS384
                                - RS512
                                type: string
                              name:
                                description: Name of the signing key. The value is
                                  used to reference the Kubernetes secret that stores
                                  the key and in the `kid` claim of the wristband
                                  token header.
                                type: string
                            required:
                            - algorithm
                            - name
                            type: object
                          type: array
                        tokenDuration:
                          description: Time span of the wristband token, in seconds.
                          format: int64
                          type: integer
                      required:
                      - issuer
                      - signingKeyRefs
                      type: object
                  required:
                  - name
                  type: object
                type: array
            required:
            - hosts
            type: object
          status:
            description: AuthConfigStatus defines the observed state of AuthConfig
            properties:
              festivalWristbandEnabled:
                type: boolean
              numAuthorizationPolicies:
                format: int64
                type: integer
              numIdentitySources:
                format: int64
                type: integer
              numMetadataSources:
                format: int64
                type: integer
              numResponseItems:
                format: int64
                type: integer
              ready:
                type: boolean
            required:
            - festivalWristbandEnabled
            - numAuthorizationPolicies
            - numIdentitySources
            - numMetadataSources
            - numResponseItems
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: authorino-authconfig-editor-role
rules:
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: authorino-authconfig-viewer-role
rules:
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: authorino-manager-k8s-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: authorino-manager-role
rules:
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: authorino-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: authorino-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create

---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: authorino-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: authorinos.operator.authorino.kuadrant.io
spec:
  group: operator.authorino.kuadrant.io
  names:
    kind: Authorino
    listKind: AuthorinoList
    plural: authorinos
    singular: authorino
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Authorino is the Schema for the authorinos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AuthorinoSpec defines the desired state of Authorino
            properties:
              authConfigLabelSelectors:
                type: string
              clusterWide:
                type: boolean
              image:
                type: string
              imagePullPolicy:
                type: string
              listener:
                properties:
                  port:
                    format: int32
                    type: integer
                  tls:
                    properties:
                      certSecretRef:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      enabled:
                        type: boolean
                    type: object
                type: object
              logLevel:
                type: string
              logMode:
                type: string
              oidcServer:
                properties:
                  port:
                    format: int32
                    type: integer
                  tls:
                    properties:
                      certSecretRef:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      enabled:
                        type: boolean
                    type: object
                type: object
              replicas:
                format: int32
                type: integer
              secretLabelSelectors:
                type: string
              volumeMounts:
                items:
                  description: VolumeMount describes a mounting of a Volume within a container.
                  properties:
                    mountPath:
                      description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                      type: string
                    mountPropagation:
                      description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                      type: boolean
                    subPath:
                      description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                items:
                  description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                  properties:
                    awsElasticBlockStore:
                      description: 'AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                      properties:
                        fsType:
                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine'
                          type: string
                        partition:
                          description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                          format: int32
                          type: integer
                        readOnly:
                          description: 'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          type: boolean
                        volumeID:
                          description: 'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          type: string
                      required:
                      - volumeID
                      type: object
                    azureDisk:
                      description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                      properties:
                        cachingMode:
                          description: 'Host Caching mode: None, Read Only, Read Write.'
                          type: string
                        diskName:
                          description: The Name of the data disk in the blob storage
                          type: string
                        diskURI:
                          description: The URI the data disk in the blob storage
                          type: string
                        fsType:
                          description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        kind:
                          description: 'Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                          type: string
                        readOnly:
                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          type: boolean
                      required:
                      - diskName
                      - diskURI
                      type: object
                    azureFile:
                      description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                      properties:
                        readOnly:
                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretName:
                          description: the name of secret that contains Azure Storage Account Name and Key
                          type: string
                        shareName:
                          description: Share Name
                          type: string
                      required:
                      - secretName
                      - shareName
                      type: object
                    cephfs:
                      description: CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                      properties:
                        monitors:
                          description: 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                          items:
                            type: string
                          type: array
                        path:
                          description: 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                          type: string
                        readOnly:
                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                          type: boolean
                        secretFile:
                          description: 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                          type: string
                        secretRef:
                          description: 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        user:
                          description: 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                          type: string
                      required:
                      - monitors
                      type: object
                    cinder:
                      description: 'Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                      properties:
                        fsType:
                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          type: string
                        readOnly:
                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          type: boolean
                        secretRef:
                          description: 'Optional: points to a secret object containing parameters used to connect to OpenStack.'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        volumeID:
                          description: 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          type: string
                      required:
                      - volumeID
                      type: object
                    configMap:
                      description: ConfigMap represents a configMap that should populate this volume
                      properties:
                        defaultMode:
                          description: 'Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                          format: int32
                          type: integer
                        items:
                          description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: The key to project.
                                type: string
                              mode:
                                description: 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                format: int32
                                type: integer
                              path:
                                description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the ConfigMap or its keys must be defined
                          type: boolean
                      type: object
                    csi:
                      description: CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                      properties:
                        driver:
                          description: Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                          type: string
                        fsType:
                          description: Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                          type: string
                        nodePublishSecretRef:
                          description: NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        readOnly:
                          description: Specifies a read-only configuration for the volume. Defaults to false (read/write).
                          type: boolean
                        volumeAttributes:
                          additionalProperties:
                            type: string
                          description: VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                          type: object
                      required:
                      - driver
                      type: object
                    downwardAPI:
                      description: DownwardAPI represents downward API about the pod that should populate this volume
                      properties:
                        defaultMode:
                          description: 'Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                          format: int32
                          type: integer
                        items:
                          description: Items is a list of downward API volume file
                          items:
                            description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                            properties:
                              fieldRef:
                                description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                              mode:
                                description: 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                format: int32
                                type: integer
                              path:
                                description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                type: string
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes, optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                            required:
                            - path
                            type: object
                          type: array
                      type: object
                    emptyDir:
                      description: 'EmptyDir represents a temporary directory that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                      properties:
                        medium:
                          description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    ephemeral:
                      description: "Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. \n Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). \n Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. \n Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. \n A pod can use both types of ephemeral volumes and persistent volumes at the same time. \n This is a beta feature and only available when the GenericEphemeralVolume feature gate is enabled."
                      properties:
                        volumeClaimTemplate:
                          description: "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). \n An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. \n This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. \n Required, must not be nil."
                          properties:
                            metadata:
                              description: May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
                              type: object
                            spec:
                              description: The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
                              properties:
                                accessModes:
                                  description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                  items:
                                    type: string
                                  type: array
                                dataSource:
                                  description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.'
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                resources:
                                  description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                selector:
                                  description: A label query over volumes to consider for binding.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                storageClassName:
                                  description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                  type: string
                                volumeMode:
                                  description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                  type: string
                                volumeName:
                                  description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                                  type: string
                              type: object
                          required:
                          - spec
                          type: object
                      type: object
                    fc:
                      description: FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                      properties:
                        fsType:
                          description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine'
                          type: string
                        lun:
                          description: 'Optional: FC target lun number'
                          format: int32
                          type: integer
                        readOnly:
                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                          type: boolean
                        targetWWNs:
                          description: 'Optional: FC target worldwide names (WWNs)'
                          items:
                            type: string
                          type: array
                        wwids:
                          description: 'Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'
                          items:
                            type: string
                          type: array
                      type: object
                    flexVolume:
                      description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                      properties:
                        driver:
                          description: Driver is the name of the driver to use for this volume.
                          type: string
                        fsType:
                          description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: 'Optional: Extra command options if any.'
                          type: object
                        readOnly:
                          description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                          type: boolean
                        secretRef:
                          description: 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - driver
                      type: object
                    flocker:
                      description: Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                      properties:
                        datasetName:
                          description: Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                          type: string
                        datasetUUID:
                          description: UUID of the dataset. This is unique identifier of a Flocker dataset
                          type: string
                      type: object
                    gcePersistentDisk:
                      description: 'GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                      properties:
                        fsType:
                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine'
                          type: string
                        partition:
                          description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          format: int32
                          type: integer
                        pdName:
                          description: 'Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          type: string
                        readOnly:
                          description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          type: boolean
                      required:
                      - pdName
                      type: object
                    gitRepo:
                      description: 'GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod''s container.'
                      properties:
                        directory:
                          description: Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                          type: string
                        repository:
                          description: Repository URL
                          type: string
                        revision:
                          description: Commit hash for the specified revision.
                          type: string
                      required:
                      - repository
                      type: object
                    glusterfs:
                      description: 'Glusterfs represents a Glusterfs mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                      properties:
                        endpoints:
                          description: 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                          type: string
                        path:
                          description: 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                          type: string
                        readOnly:
                          description: 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                          type: boolean
                      required:
                      - endpoints
                      - path
                      type: object
                    hostPath:
                      description: 'HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.'
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    iscsi:
                      description: 'ISCSI represents an ISCSI Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                      properties:
                        chapAuthDiscovery:
                          description: whether support iSCSI Discovery CHAP authentication
                          type: boolean
                        chapAuthSession:
                          description: whether support iSCSI Session CHAP authentication
                          type: boolean
                        fsType:
                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine'
                          type: string
                        initiatorName:
                          description: Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                          type: string
                        iqn:
                          description: Target iSCSI Qualified Name.
                          type: string
                        iscsiInterface:
                          description: iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                          type: string
                        lun:
                          description: iSCSI Target Lun number.
                          format: int32
                          type: integer
                        portals:
                          description: iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                          items:
                            type: string
                          type: array
                        readOnly:
                          description: ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                          type: boolean
                        secretRef:
                          description: CHAP Secret for iSCSI target and initiator authentication
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        targetPortal:
                          description: iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                          type: string
                      required:
                      - iqn
                      - lun
                      - targetPortal
                      type: object
                    name:
                      description: 'Volume''s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    nfs:
                      description: 'NFS represents an NFS mount on the host that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                      properties:
                        path:
                          description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          type: string
                        readOnly:
                          description: 'ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          type: boolean
                        server:
                          description: 'Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          type: string
                      required:
                      - path
                      - server
                      type: object
                    persistentVolumeClaim:
                      description: 'PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        claimName:
                          description: 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          type: string
                        readOnly:
                          description: Will force the ReadOnly setting in VolumeMounts. Default false.
                          type: boolean
                      required:
                      - claimName
                      type: object
                    photonPersistentDisk:
                      description: PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        pdID:
                          description: ID that identifies Photon Controller persistent disk
                          type: string
                      required:
                      - pdID
                      type: object
                    portworxVolume:
                      description: PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        readOnly:
                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          type: boolean
                        volumeID:
                          description: VolumeID uniquely identifies a Portworx volume
                          type: string
                      required:
                      - volumeID
                      type: object
                    projected:
                      description: Items for all in one resources secrets, configmaps, and downward API
                      properties:
                        defaultMode:
                          description: Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        sources:
                          description: list of volume projections
                          items:
                            description: Projection that may be projected along with other supported volume types
                            properties:
                              configMap:
                                description: information about the configMap data to project
                                properties:
                                  items:
                                    description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within a volume.
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description: 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          format: int32
                                          type: integer
                                        path:
                                          description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its keys must be defined
                                    type: boolean
                                type: object
                              downwardAPI:
                                description: information about the downwardAPI data to project
                                properties:
                                  items:
                                    description: Items is a list of DownwardAPIVolume file
                                    items:
                                      description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                      properties:
                                        fieldRef:
                                          description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        mode:
                                          description: 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          format: int32
                                          type: integer
                                        path:
                                          description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                          type: string
                                        resourceFieldRef:
                                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format of the exposed resources, defaults to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                      required:
                                      - path
                                      type: object
                                    type: array
                                type: object
                              secret:
                                description: information about the secret data to project
                                properties:
                                  items:
                                    description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within a volume.
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description: 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          format: int32
                                          type: integer
                                        path:
                                          description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                type: object
                              serviceAccountToken:
                                description: information about the serviceAccountToken data to project
                                properties:
                                  audience:
                                    description: Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                    type: string
                                  expirationSeconds:
                                    description: ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                    format: int64
                                    type: integer
                                  path:
                                    description: Path is the path relative to the mount point of the file to project the token into.
                                    type: string
                                required:
                                - path
                                type: object
                            type: object
                          type: array
                      type: object
                    quobyte:
                      description: Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                      properties:
                        group:
                          description: Group to map volume access to Default is no group
                          type: string
                        readOnly:
                          description: ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                          type: boolean
                        registry:
                          description: Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                          type: string
                        tenant:
                          description: Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                          type: string
                        user:
                          description: User to map volume access to Defaults to serivceaccount user
                          type: string
                        volume:
                          description: Volume is a string that references an already created Quobyte volume by name.
                          type: string
                      required:
                      - registry
                      - volume
                      type: object
                    rbd:
                      description: 'RBD represents a Rados Block Device mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                      properties:
                        fsType:
                          description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine'
                          type: string
                        image:
                          description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          type: string
                        keyring:
                          description: 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          type: string
                        monitors:
                          description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          items:
                            type: string
                          type: array
                        pool:
                          description: 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          type: string
                        readOnly:
                          description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          type: boolean
                        secretRef:
                          description: 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        user:
                          description: 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                          type: string
                      required:
                      - image
                      - monitors
                      type: object
                    scaleIO:
                      description: ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                      properties:
                        fsType:
                          description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                          type: string
                        gateway:
                          description: The host address of the ScaleIO API Gateway.
                          type: string
                        protectionDomain:
                          description: The name of the ScaleIO Protection Domain for the configured storage.
                          type: string
                        readOnly:
                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretRef:
                          description: SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        sslEnabled:
                          description: Flag to enable/disable SSL communication with Gateway, default false
                          type: boolean
                        storageMode:
                          description: Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                          type: string
                        storagePool:
                          description: The ScaleIO Storage Pool associated with the protection domain.
                          type: string
                        system:
                          description: The name of the storage system as configured in ScaleIO.
                          type: string
                        volumeName:
                          description: The name of a volume already created in the ScaleIO system that is associated with this volume source.
                          type: string
                      required:
                      - gateway
                      - secretRef
                      - system
                      type: object
                    secret:
                      description: 'Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                      properties:
                        defaultMode:
                          description: 'Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                          format: int32
                          type: integer
                        items:
                          description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: The key to project.
                                type: string
                              mode:
                                description: 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                format: int32
                                type: integer
                              path:
                                description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                        optional:
                          description: Specify whether the Secret or its keys must be defined
                          type: boolean
                        secretName:
                          description: 'Name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          type: string
                      type: object
                    storageos:
                      description: StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                      properties:
                        fsType:
                          description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        readOnly:
                          description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretRef:
                          description: SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        volumeName:
                          description: VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                          type: string
                        volumeNamespace:
                          description: VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                          type: string
                      type: object
                    vsphereVolume:
                      description: VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        storagePolicyID:
                          description: Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                          type: string
                        storagePolicyName:
                          description: Storage Policy Based Management (SPBM) profile name.
                          type: string
                        volumePath:
                          description: Path that identifies vSphere volume vmdk
                          type: string
                      required:
                      - volumePath
                      type: object
                  required:
                  - name
                  type: object
                type: array
            type: object
          status:
            description: AuthorinoStatus defines the observed state of Authorino
            properties:
              conditions:
                description: 'Conditions is an array of the current Authorino''s CR conditions Supported condition types: ConditionReady'
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transit from one status to another.
                      format: date-time
                      type: string
                    lastUpdatedTime:
                      description: Last time the condition was updated
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: authorino-operator-controller-manager
  namespace: authorino-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: authorino-operator-leader-election-role
  namespace: authorino-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: authorino-operator-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - clusterrolebindings
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - clusterroles
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - configmaps/status
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - '*'
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - '*'
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - roles
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - services
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - authorino.kuadrant.io
  resources:
  - authconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - operator.authorino.kuadrant.io
  resources:
  - authorinos
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.authorino.kuadrant.io
  resources:
  - authorinos/finalizers
  verbs:
  - update
- apiGroups:
  - operator.authorino.kuadrant.io
  resources:
  - authorinos/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: authorino-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: authorino-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: authorino-operator-leader-election-rolebinding
  namespace: authorino-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: authorino-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: authorino-operator-controller-manager
  namespace: authorino-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: authorino-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: authorino-operator-manager-role
subjects:
- kind: ServiceAccount
  name: authorino-operator-controller-manager
  namespace: authorino-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: authorino-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: authorino-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: authorino-operator-controller-manager
  namespace: authorino-operator
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: aac3a15d.authorino.kuadrant.io
kind: ConfigMap
metadata:
  name: authorino-operator-manager-config
  namespace: authorino-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: authorino-operator-controller-manager-metrics-service
  namespace: authorino-operator
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: authorino-operator-controller-manager
  namespace: authorino-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/3scale/authorino-operator:v0.0.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: authorino-operator-controller-manager
      terminationGracePeriodSeconds: 10
